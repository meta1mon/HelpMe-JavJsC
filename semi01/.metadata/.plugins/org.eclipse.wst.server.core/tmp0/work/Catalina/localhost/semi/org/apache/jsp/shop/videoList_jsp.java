/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-05-04 02:49:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bookshop.DAO.shopvideoDAO;
import bookshop.VO.videoVO;
import java.util.List;
import java.text.SimpleDateFormat;

public final class videoList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("bookshop.DAO.shopvideoDAO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("bookshop.VO.videoVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	List<videoVO> vList = null;
int number = 0;
String vkind = "";

vkind = request.getParameter("vkind");

shopvideoDAO vProcess = shopvideoDAO.getinstance();
int count = vProcess.getVideoCount();

if (count > 0) {
	vList = vProcess.getVideos(vkind);
}

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>등록된 영상 목록</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String v_kindName = "";
	if (vkind.equals("100")) {
		v_kindName = "JAVA";
	} else if (vkind.equals("200")) {
		v_kindName = "JSP";
	} else if (vkind.equals("300")) {
		v_kindName = "HTML";
	} else if (vkind.equals("all")) {
		v_kindName = "전체";
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<p>");
      out.print(v_kindName);
      out.write("\r\n");
      out.write("\t\t분류의 목록:\r\n");
      out.write("\t\t");

		if (vkind.equals("all")) {
	
      out.write("\r\n");
      out.write("\t\t");
      out.print(count);
      out.write("개\r\n");
      out.write("\t\t");

			} else {
		
      out.write("\r\n");
      out.write("\t\t");
      out.print(vList.size());
      out.write("개\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td><a href=\"./videoRegisterForm.jsp\">영상 등록</a></td>\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");

		if (count == 0) {
	
      out.write("\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>등록된 책 없음</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");

		} else {
	
      out.write("\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr hegiht=\"30\">\r\n");
      out.write("\t\t\t<td>번호</td>\r\n");
      out.write("\t\t\t<td>영상분류</td>\r\n");
      out.write("\t\t\t<td>영상 제목</td>\r\n");
      out.write("\t\t\t<td>가격</td>\r\n");
      out.write("\t\t\t<td>영상 썸네일</td>\r\n");
      out.write("\t\t\t<td>할인율</td>\r\n");
      out.write("\t\t\t<td>등록일</td>\r\n");
      out.write("\t\t\t<td>시청 가능 시작일</td>\r\n");
      out.write("\t\t\t<td>시청 종료일</td>\r\n");
      out.write("\t\t\t<td>영상길이</td>\r\n");
      out.write("\t\t\t<td>수정</td>\r\n");
      out.write("\t\t\t<td>삭제</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t");

				for (int i = 0; i < vList.size(); i++) {
				videoVO video = (videoVO)vList.get(i);
			
      out.write("\r\n");
      out.write("\t\t\t<tr height=\"30\">\r\n");
      out.write("\t\t\t<td>");
      out.print(++number);
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getVkind());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getVtitle());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getVprice());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getVimage());
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getDiscountRate());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(sdf.format(video.getRegdate()));
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getStartDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getEndDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(video.getVsize() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td width=\"50\" style=\"text-decoration: underline;\">\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/videoupdateForm?vid=");
      out.print(video.getVid());
      out.write("&vkind=");
      out.print(video.getVkind());
      out.write("\">수정</a></td>\r\n");
      out.write("\t\t\t<td width=\"50\" style=\"text-decoration: underline;\">\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/videodeleteForm?vid=");
      out.print(video.getVid());
      out.write("&vkind=");
      out.print(video.getVkind());
      out.write("\">삭제</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
